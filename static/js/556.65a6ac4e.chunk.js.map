{"version":3,"file":"static/js/556.65a6ac4e.chunk.js","mappings":"kMACA,EAAuB,wBAAvB,EAA0D,4BAA1D,EAAqG,gC,SCGxFA,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAUK,KAAI,SAAAC,GAAK,OAClB,eAAmBH,UAAWC,EAA9B,UACE,UAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMT,GAAhD,WACE,yBACGK,EAAMK,MADT,KACkBL,EAAMM,aAAaC,MAAM,EAAG,GAD9C,OAGuB,OAAtBP,EAAMQ,aACL,gBACEX,UAAWC,EACXW,IAAG,0CAAqCT,EAAMQ,aAC9CE,IAAKV,EAAMK,SAGb,gBACER,UAAWC,EACXW,IAAG,kEACHC,IAAKV,EAAMK,YAfVL,EAAME,GADG,KAwBzB,C,6HChCD,EAA0B,sBAA1B,EAAwD,oB,SCD3CS,EAAO,mCACPC,EAAO,yCACPC,EAAS,yDACTC,EAAa,mCAAG,2GAAOC,EAAP,+BAAgB,EAAhB,SAEnBC,MAAM,GAAD,OAAIJ,EAAJ,8BAAiCD,EAAjC,iBAAiDI,IAFnC,8BAGzBE,OAHyB,cACrBC,EADqB,gBAIGF,MAAM,GAAD,OAAIH,GAAJ,OAAgBF,IAJxB,+BAIoCM,OAJpC,eAIrBE,EAJqB,yBAKpB,CAAED,OAAAA,EAAQC,SAAAA,IALU,4CAAH,qD,SC2C1B,EAxCa,WACX,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,WAAMC,GAAN,gFACpBL,GAAa,GADO,kBAGCV,EAAsB,GAHvB,OAGZgB,EAHY,OAIZZ,EAASY,EAAKZ,OAAOa,QAC3BT,EAAkBJ,GALA,gDAOlBQ,EAAS,EAAD,IAPU,yBASlBF,GAAa,GATK,4EAAH,sDAYnBI,GACD,GAAE,KAGD,2BACE,qBAAS/B,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,4BACC2B,IAAS,gEAAwCA,EAAMO,WACvDT,IACC,SAAC,KAAD,CACEU,MAAM,UACNC,MAAM,MACNC,SAAS,EACTC,UAAU,2BAId,SAAC3C,EAAA,EAAD,CAAWC,UAAW2B,QAI7B,C,sBC7CD,SAASgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOrB,GAEP,YADAe,EAAOf,EAET,CAEIoB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.js","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","api/FetchMovies.js","pages/Home/Home.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"listItem\":\"MovieList_listItem__vOVoz\",\"poster_thumb\":\"MovieList_poster_thumb__R7vPn\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieList.module.css';\nimport PropTypes from 'prop-types';\nexport const MovieList = ({ moviesArr }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {moviesArr.map(movie => (\n        <li key={movie.id} className={css.listItem}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <p>\n              {movie.title} ({movie.release_date.slice(0, 4)})\n            </p>\n            {movie.poster_path !== null || undefined ? (\n              <img\n                className={css.poster_thumb}\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n              />\n            ) : (\n              <img\n                className={css.poster_thumb}\n                src={`https://image.tmdb.org/t/p/w500/wmyYQbahIy4SF2Qo6qNBBkJFg7z.jpg`}\n                alt={movie.title}\n              />\n            )}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.array,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Home_section__uZuiO\",\"title\":\"Home_title__L087v\"};","export const API_KEY = `bf9c4d58b7779ca7f547438ec065a7d2`;\nexport const API_URL = `https://api.themoviedb.org/3/trending/`;\nexport const GENRE_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=`;\nexport const popularMovies = async (pageNo = 1) => {\n  const movies = await (\n    await fetch(`${API_URL}movie/week?api_key=${API_KEY}&page=${pageNo}`)\n  ).json();\n  const genreIds = await (await fetch(`${GENRE_URL}${API_KEY}`)).json();\n  return { movies, genreIds };\n};\n","import React, { useState, useEffect } from 'react';\nimport { FallingLines } from 'react-loader-spinner';\nimport css from './Home.module.css';\nimport PropTypes from 'prop-types';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { popularMovies } from 'api/FetchMovies.js';\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const handleRequest = async page => {\n      setIsLoading(true);\n      try {\n        const data = await popularMovies((page = 1));\n        const movies = data.movies.results;\n        setTrendingMovies(movies);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleRequest();\n  }, []);\n\n  return (\n    <main>\n      <section className={css.section}>\n        <h1 className={css.title}>Trending today</h1>\n        {error && <p>Sorry, something went really wrong: {error.message}</p>}\n        {isLoading && (\n          <FallingLines\n            color=\"#3f51b5\"\n            width=\"100\"\n            visible={true}\n            ariaLabel=\"falling-lines-loading\"\n          />\n        )}\n\n        <MovieList moviesArr={trendingMovies} />\n      </section>\n    </main>\n  );\n};\nexport default Home;\nHome.propTypes = {\n  trendingMovies: PropTypes.array,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MovieList","moviesArr","location","useLocation","className","css","map","movie","to","id","state","from","title","release_date","slice","poster_path","src","alt","API_KEY","API_URL","GENRE_URL","popularMovies","pageNo","fetch","json","movies","genreIds","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","handleRequest","page","data","results","message","color","width","visible","ariaLabel","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}