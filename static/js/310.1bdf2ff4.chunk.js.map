{"version":3,"file":"static/js/310.1bdf2ff4.chunk.js","mappings":"sPAGaA,EAAS,mCAAG,WAAMC,GAAN,uFAEfC,MAAM,GAAD,OAJK,gCAIL,iBAAoBD,EAApB,4BALK,qCAGK,8BAGrBE,OAHqB,cACjBC,EADiB,yBAIhB,CAAEA,OAAAA,IAJc,2CAAH,sDCFtB,EAAuB,mBAAvB,EAAqD,uBAArD,EAAqF,qBAArF,EAAwH,0B,SC+DxH,EA1Da,WACX,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,WAAMd,GAAN,kFACpBM,GAAa,GADO,SAGZN,EAAKe,OAAOJ,GAHA,SAICZ,EAAUC,GAJX,OAIZgB,EAJY,OAKZC,EAAOD,EAAKb,OAAOc,KACzBP,EAAaO,GANK,kDAQlBT,EAAS,EAAD,IARU,yBAUlBF,GAAa,GAVK,6EAAH,sDAanBQ,GACD,GAAE,CAACH,KAGF,+BACGJ,IAAS,gEAAwCA,EAAMW,WACvDb,IACC,SAAC,KAAD,CACEc,MAAM,UACNC,MAAM,MACNC,SAAS,EACTC,UAAU,2BAGd,eAAIC,UAAWC,EAAf,SACGf,EAAUgB,KAAI,SAAAC,GAAK,OAClB,gBAAwBH,UAAWC,EAAnC,UAC0B,OAAvBE,EAAMC,cACL,gBACEJ,UAAWC,EACXI,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,QAGb,gBACEP,UAAWC,EACXI,IAAG,kEACHC,IAAKH,EAAMI,QAGf,eAAGP,UAAWC,EAAd,oBAAuCE,EAAMI,SAC7C,eAAGP,UAAWC,EAAd,wBAA2CE,EAAMK,eAf1CL,EAAMM,QADG,QAsB3B,C,sBC/DD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOnC,GAEP,YADA6B,EAAO7B,EAET,CAEIkC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["api/FetchCast.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const API_KEY = `bf9c4d58b7779ca7f547438ec065a7d2`;\nexport const API_URL = `https://api.themoviedb.org/3/`;\n\nexport const fetchCast = async id => {\n  const credit = await (\n    await fetch(`${API_URL}movie/${id}/credits?api_key=${API_KEY}`)\n  ).json();\n  return { credit };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"listItem\":\"Cast_listItem__UvJjd\",\"poster\":\"Cast_poster__5f-RS\",\"description\":\"Cast_description__uN0VA\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FallingLines } from 'react-loader-spinner';\nimport { fetchCast } from 'api/FetchCast';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const handleRequest = async id => {\n      setIsLoading(true);\n      try {\n        const id = Number(movieId);\n        const data = await fetchCast(id);\n        const cast = data.credit.cast;\n        setMovieCast(cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleRequest();\n  }, [movieId]);\n\n  return (\n    <section>\n      {error && <p>Sorry, something went really wrong: {error.message}</p>}\n      {isLoading && (\n        <FallingLines\n          color=\"#3f51b5\"\n          width=\"100\"\n          visible={true}\n          ariaLabel=\"falling-lines-loading\"\n        />\n      )}\n      <ul className={css.list}>\n        {movieCast.map(actor => (\n          <li key={actor.cast_id} className={css.listItem}>\n            {actor.profile_path !== null || undefined ? (\n              <img\n                className={css.poster}\n                src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                alt={actor.name}\n              />\n            ) : (\n              <img\n                className={css.poster}\n                src={`https://image.tmdb.org/t/p/w500/wmyYQbahIy4SF2Qo6qNBBkJFg7z.jpg`}\n                alt={actor.name}\n              />\n            )}\n            <p className={css.description}>Actor: {actor.name}</p>\n            <p className={css.description}>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["fetchCast","id","fetch","json","credit","useState","isLoading","setIsLoading","error","setError","movieCast","setMovieCast","movieId","useParams","useEffect","handleRequest","Number","data","cast","message","color","width","visible","ariaLabel","className","css","map","actor","profile_path","src","alt","name","character","cast_id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}