{"version":3,"file":"static/js/678.d5b7395f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","api/SearchMovie.js","pages/Movies/Movies.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"listItem\":\"MovieList_listItem__vOVoz\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieList.module.css';\nimport PropTypes from 'prop-types';\nexport const MovieList = ({ moviesArr }) => {\n  const location = useLocation();\n  const releaseYear = moviesArr\n    .map(movie => movie.release_date)\n    .join('')\n    .slice(0, 4);\n\n  return (\n    <ul className={css.list}>\n      {moviesArr.map(movie => (\n        <li key={movie.id} className={css.listItem}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <p>\n              {movie.title} ({releaseYear})\n            </p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.array,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Movies_section__bjPDA\",\"input\":\"Movies_input__KrUqs\",\"button\":\"Movies_button__GcIka\",\"invitation\":\"Movies_invitation__laWGw\"};","export const API_KEY = `bf9c4d58b7779ca7f547438ec065a7d2`;\nconst SEARCH_URL = `https://api.themoviedb.org/3/search/movie?api_key=`;\nexport const GENRE_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=`;\nexport const searchMovies = async (searchValue, searchPage = 1) => {\n  const responseMovies = await fetch(\n    `${SEARCH_URL}${API_KEY}&query=${searchValue}&page=${searchPage}`\n  );\n  const responseGenres = await fetch(`${GENRE_URL}${API_KEY}`);\n  const movies = await responseMovies.json();\n  const genreIds = await responseGenres.json();\n  return { movies, genreIds };\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { FallingLines } from 'react-loader-spinner';\nimport css from './Movies.module.css';\nimport PropTypes from 'prop-types';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { searchMovies } from 'api/SearchMovie';\nimport { useSearchParams } from 'react-router-dom';\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const input = useRef();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const searchInput = input.current.value;\n    if (searchQuery === searchInput) return;\n    setSearchedMovies([]);\n  };\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n  useEffect(() => {\n    const handleRequest = async (searchValue, searchPage = 1) => {\n      setIsLoading(true);\n      try {\n        const data = await searchMovies(searchQuery, (searchPage = 1));\n        const movies = data.movies.results;\n        setSearchedMovies(movies);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleRequest();\n  }, [searchQuery]);\n  return (\n    <div className={css.section}>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          ref={input}\n          placeholder=\"What do you looking for?\"\n          onChange={e => updateQueryString(e.target.value)}\n        ></input>\n        <button className={css.button} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {error && <p>Sorry, something went really wrong: {error.message}</p>}\n      {isLoading && (\n        <FallingLines\n          color=\"#3f51b5\"\n          width=\"100\"\n          visible={true}\n          ariaLabel=\"falling-lines-loading\"\n        />\n      )}\n      {searchedMovies?.length > 0 ? (\n        <MovieList moviesArr={searchedMovies} />\n      ) : (\n        <p className={css.invitation}>\n          Hey there! There are so many films to discover! Let's seek something\n          interesting!\n        </p>\n      )}\n    </div>\n  );\n};\nexport default Movies;\nMovies.propTypes = {\n  handleSubmit: PropTypes.func,\n  input: PropTypes.object,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MovieList","moviesArr","location","useLocation","releaseYear","map","movie","release_date","join","slice","className","css","to","id","state","from","title","API_KEY","SEARCH_URL","GENRE_URL","searchMovies","searchValue","searchPage","fetch","responseMovies","responseGenres","json","movies","genreIds","useSearchParams","searchParams","setSearchParams","searchQuery","get","useState","searchedMovies","setSearchedMovies","isLoading","setIsLoading","error","setError","input","useRef","useEffect","handleRequest","data","results","onSubmit","evt","preventDefault","searchInput","current","value","type","ref","placeholder","onChange","e","query","target","message","color","width","visible","ariaLabel","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}